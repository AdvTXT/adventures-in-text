To do

- put object attributes as default arguments so that they can be customized more easily?
- have dynamic container and room descriptions so that they can return something about the objects inside them
- better way to set room exits when initializing
- grammar
    - use lambdas or mapping instead of list comprehensions
    - less hardcoded, more intelligent processing
    - "get down" fails
- when database is empty, get_game function throws an index error
- setting new_game = deepcopy(old_game) in play_game.py makes locations not update properly
- throw exceptions for required attributes that are not provided
- set class methods serialise/de-serialise to help with database storage (instead of pickling)
